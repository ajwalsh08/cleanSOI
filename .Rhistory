print("Run migration on your county-state pair of interest, then check the repo for your new files! See the readme for more details.")
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
codes <- inflow[,3:6]
migration <- function(county, state) {
county <- paste(county, "County")
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
}
print("Run migration on your county-state pair of interest, then check the repo for your new files! See the readme for more details.")
migration("Jefferson","AL")
?tapply
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
}
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
}
migration("Jefferson", "AL")
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
state_in_sum <- with(inflow1, tapply(Exmpt_Num, State_Abbrv, sum))
state_out_sum <- with(outflow1, tapply(Exmpt_Num, State_Abbrv, sum))
return state_in_sum
}
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
state_in_sum <- with(inflow1, tapply(Exmpt_Num, State_Abbrv, sum))
state_out_sum <- with(outflow1, tapply(Exmpt_Num, State_Abbrv, sum))
return(state_in_sum)
}
migration("Jefferson", "AL")
?png
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
for (data in c(inflow1, outflow1)){
summary <- with(data, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste(data, ".png"))
plot(summary, xaxt="n")
axis(1, at=1:length(xnames), labels=xnames)
dev.off()
}
}
migration("Jefferson", "AL")
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
summary <- with(data, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste(data, ".png"))
plot(summary, xaxt="n")
axis(1, at=1:length(xnames), labels=xnames)
dev.off()
}
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
summary <- with(inflow1, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste(data, ".png"))
plot(summary, xaxt="n")
axis(1, at=1:length(xnames), labels=xnames)
dev.off()
}
migration("Jefferson", "AL")
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
summary <- with(inflow1, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste("state_inflow.png"))
plot(summary, xaxt="n")
axis(1, at=1:length(xnames), labels=xnames)
dev.off()
}
migration("Jefferson", "AL")
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
inflow_plot <- subset(inflow_nocode, State_Abbrv != state)
summary <- with(inflow_plot, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste("state_inflow.png"))
plot(summary, xaxt="n")
axis(1, at=1:length(xnames), labels=xnames)
dev.off()
}
migration("Jefferson", "AL")
?plot
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
inflow_plot <- subset(inflow_nocode, State_Abbrv != state)
summary <- with(inflow_plot, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste("state_inflow.png"))
plot(summary, xaxt="n")
with(summary, text(State_Abbrv, Exmpt_Num, labels = xnames)
dev.off()
}
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
inflow_plot <- subset(inflow_nocode, State_Abbrv != state)
summary <- with(inflow_plot, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste("state_inflow.png"))
plot(summary, xaxt="n")
with(summary, text(State_Abbrv, Exmpt_Num, labels = xnames))
dev.off()
}
migration("Jefferson", "AL")
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
inflow_plot <- subset(inflow_nocode, State_Abbrv != state)
summary <- with(inflow_plot, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste("state_inflow.png"))
plot(summary, xaxt="n")
text(summary$State_Abbrv, summary$Exmpt_Num, labels = xnames))
dev.off()
}
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
inflow_plot <- subset(inflow_nocode, State_Abbrv != state)
summary <- with(inflow_plot, tapply(Exmpt_Num, State_Abbrv, sum))
xnames <- names(summary)
png(filename = paste("state_inflow.png"))
plot(summary, xaxt="n")
text(summary$State_Abbrv, summary$Exmpt_Num, labels = xnames)
dev.off()
}
migration("Jefferson", "AL")
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
inflow_plot <- subset(inflow_nocode, State_Abbrv != state)
summary <- with(inflow_plot, tapply(Exmpt_Num, State_Abbrv, sum))
lapply(summary, cat, "\n", file=paste(county,state,"state inflow.txt"), append=TRUE)
}
migration("Jefferson", "AL")
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
inflow_states <- subset(inflow_nocode, State_Abbrv != state)
summary <- with(inflow_states, tapply(Exmpt_Num, State_Abbrv, sum))
inflow_summary <- data.frame(key=names(summary), value=summary)
write.csv(inflow_summary, file = paste(county,state,"inflow by state.csv"))
}
migration("Jefferson", "AL")
migration <- function(county, state) {
# Reads in the data
inflow <- read.csv("~/Desktop/cleanSOI/countyinflow1011.csv")
outflow <- read.csv("~/Desktop/cleanSOI/countyoutflow1011.csv")
# Edits the argument to agree with the data
county <- paste(county, "County")
# Uses inflow to convert args to county, state codes
codes <- inflow[,3:6]
code <- subset(codes, County_Name == county & State_Abbrv == state)
state_code <- code[1,1]
county_code <- code[1,2]
# Subsets the data
inflow1 <- subset(inflow,
County_Code_Dest == county_code &
State_Code_Dest == state_code)
inflow_nocode <- inflow1[,5:9]
outflow1 <- subset(outflow,
County_Code_Origin == county_code &
State_Code_Origin == state_code)
outflow_nocode <- outflow1[,5:9]
# Outputs the data in two csv files
write.csv(inflow_nocode, file = paste(county,state,"inflow.csv"))
write.csv(outflow_nocode, file = paste(county,state,"outflow.csv"))
# Uses tapply to generate state summary tables
inflow_states <- subset(inflow_nocode, State_Abbrv != state)
summary <- with(inflow_states, tapply(Exmpt_Num, State_Abbrv, sum))
inflow_summary <- data.frame(value=summary)
write.csv(inflow_summary, file = paste(county,state,"inflow by state.csv"))
}
migration("Jefferson", "AL")
